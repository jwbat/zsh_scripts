#! python
'''
 encryption by Rustlang system tool, age ("a good encryption")
'''
import subprocess as sp
from os import getenv, chdir, getcwd
from pathlib import Path
from ageifier import (encrypt, decrypt, encrypt_dir, decrypt_dir, clear_directory,
                     compare, compare_dirs, copy_dir, copy_into, abspath)
from colored import fg


getpath     = lambda s: Path(getenv(s))

home        = getpath('HOME')
dots        = getpath('DOTS')
predots     = getpath('PREDOTS')
scripts     = getpath('Z')
repos       = [dots, scripts]
printcwd    = lambda : print(fg(250), '\n cwd ', fg(137), getcwd())

configs      = ('.zprofile', '.zsh_a', '.sbg-env', '.ui-env', '.aws')
config_paths = [home / name for name in configs]
[copy_into(p, predots / 'configs') for p in config_paths]

snowconfig = predots / 'configs' / '.snowsql'
clear_directory(snowconfig)
copy_into(home / '.snowsql'/ 'config', snowconfig)


copy_dir(predots, dots / 'dotted')
encrypt_dir(dots / 'dotted')
copy_dir(dots / 'dotted', home / 'postdots')
decrypt_dir(home / 'postdots')
compare_dirs(predots, home / 'postdots')


def update_repos():
    repo_color, msg_color, msg2_color = fg(208), fg(186), fg(123)
    run_cmd = lambda cmd: sp.run(cmd, capture_output=True, text=True) 
    for dirpath in repos:
        dpath = abspath(dirpath)
        try:
            run_cmd(['git', '-C', dpath, 'add', '.'])
            if run_cmd(['git', '-C', dpath, 'status', '--porcelain']).stdout.strip():
                run_cmd(['git', '-C', dpath, 'commit', '-m', '.'])
                run_cmd(['git', '-C', dpath, 'push', '-u', 'origin', 'main'])
                print(f'{msg2_color} Repository{repo_color} {dpath} {msg2_color}updated and pushed successfully.')
            else:
                print(f'{msg_color} No changes in repository{repo_color} {dpath}{msg_color}. Skipping commit and push.')
        except sp.CalledProcessError as e:
            print(f'error running git command in {dpath}: {e}')


chdir(scripts)
printcwd()
update_repos()
print()
