#! python
import json
import subprocess as sp
from os import environ, listdir, makedirs
from os.path import join, expanduser, basename, dirname
from colored import fg, attr
from utils import encrypt, decrypt, compare


home     = expanduser('~')
dotfiles = f'{home}/.dotfiles'
scripts  = f'{home}/code/shell/scripts'
certdirs = [f'{home}/macbook_certs', f'{home}/vsd_macbook_certs']
repos    = [dotfiles, scripts]

orig_paths = [
    f'{home}/.zprofile', f'{home}/.zsh_a', f'{home}/.sbg-env', f'{home}/.ui-env',
    f'{home}/.snowsql/config', f'{home}/.aws/config', f'{home}/.aws/credentials'
] + [join(certdir, fname) for certdir in certdirs for fname in listdir(certdir)]

make_encrypted_path = lambda s: s.replace(f'{home}', f'{dotfiles}') + '.age'
make_decrypted_path = lambda s: s.replace(f'{dotfiles}', f'{home}/deageified_dots')[:-4] # remove '.age'
# put decrypted files altogether in one dir for easy reference ^^
encrypted_paths = [make_encrypted_path(p) for p in orig_paths]
decrypted_paths = [make_decrypted_path(p) for p in encrypted_paths]


def ageify():
    for epath, opath in zip(encrypted_paths, orig_paths):
        encrypt(epath, opath)


def deageify():
    for depath, enpath in zip(decrypted_paths, encrypted_paths):
        dname = dirname(depath)
        makedirs(dname, exist_ok=True)
        decrypt(depath, enpath)


def print_comparisons(orig_paths, decrypted_paths):
    msg_color, success_color, error_color = fg(173), fg(154), fg(230)
    print(msg_color + f' comparing decrypted with original dotfiles..')
    for opath, depath in zip(orig_paths, decrypted_paths):
        if not compare(opath, depath):
            file = depath.split('/')[-1]
            print(fg(173) + file +  fg(254) + ' ->' + success_color +' ok ')
        else:
            print(error_color + f' {opath} and \n {depath} differ')
    print('\n', fg(252))


def update_repos():
    run_cmd = lambda cmd: sp.run(cmd, check=True) # , capture_output=True, text=True)
    for dpath in repos:
        try:
            run_cmd(['git', '-C', dpath, 'add', '.'])
            run_cmd(['git', '-C', dpath, 'commit', '-m', '.'])
            run_cmd(['git', '-C', dpath, 'push', '-u', 'origin', 'main'])
        except sp.CalledProcessError as e:
            print(f'error running git command in {dpath}: {e}')


ageify()
deageify()
print_comparisons(orig_paths, decrypted_paths)
update_repos()
